// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: penumbra/custody/threshold/v1alpha1/threshold.proto

package thresholdv1alpha1

import (
	v1alpha1 "github.com/penumbra-zone/penumbra/proto/go/gen/penumbra/core/transaction/v1alpha1"
	v1alpha11 "github.com/penumbra-zone/penumbra/proto/go/gen/penumbra/crypto/decaf377_frost/v1alpha1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A key one can use to verify signatures.
//
// This key can also serve as a unique identifier for users.
type VerificationKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inner []byte `protobuf:"bytes,1,opt,name=inner,proto3" json:"inner,omitempty"`
}

func (x *VerificationKey) Reset() {
	*x = VerificationKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_penumbra_custody_threshold_v1alpha1_threshold_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerificationKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerificationKey) ProtoMessage() {}

func (x *VerificationKey) ProtoReflect() protoreflect.Message {
	mi := &file_penumbra_custody_threshold_v1alpha1_threshold_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerificationKey.ProtoReflect.Descriptor instead.
func (*VerificationKey) Descriptor() ([]byte, []int) {
	return file_penumbra_custody_threshold_v1alpha1_threshold_proto_rawDescGZIP(), []int{0}
}

func (x *VerificationKey) GetInner() []byte {
	if x != nil {
		return x.Inner
	}
	return nil
}

// A signature proving that a message was created by the owner of a verification key.
type Signature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inner []byte `protobuf:"bytes,1,opt,name=inner,proto3" json:"inner,omitempty"`
}

func (x *Signature) Reset() {
	*x = Signature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_penumbra_custody_threshold_v1alpha1_threshold_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Signature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Signature) ProtoMessage() {}

func (x *Signature) ProtoReflect() protoreflect.Message {
	mi := &file_penumbra_custody_threshold_v1alpha1_threshold_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Signature.ProtoReflect.Descriptor instead.
func (*Signature) Descriptor() ([]byte, []int) {
	return file_penumbra_custody_threshold_v1alpha1_threshold_proto_rawDescGZIP(), []int{1}
}

func (x *Signature) GetInner() []byte {
	if x != nil {
		return x.Inner
	}
	return nil
}

// The message the coordinator sends in round 1 of the signing protocol.
type CoordinatorRound1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The plan that the coordinator would like the followers to sign.
	Plan *v1alpha1.TransactionPlan `protobuf:"bytes,1,opt,name=plan,proto3" json:"plan,omitempty"`
}

func (x *CoordinatorRound1) Reset() {
	*x = CoordinatorRound1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_penumbra_custody_threshold_v1alpha1_threshold_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoordinatorRound1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoordinatorRound1) ProtoMessage() {}

func (x *CoordinatorRound1) ProtoReflect() protoreflect.Message {
	mi := &file_penumbra_custody_threshold_v1alpha1_threshold_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoordinatorRound1.ProtoReflect.Descriptor instead.
func (*CoordinatorRound1) Descriptor() ([]byte, []int) {
	return file_penumbra_custody_threshold_v1alpha1_threshold_proto_rawDescGZIP(), []int{2}
}

func (x *CoordinatorRound1) GetPlan() *v1alpha1.TransactionPlan {
	if x != nil {
		return x.Plan
	}
	return nil
}

// The message the coordinator sends in round 2 of the signing protocol.
type CoordinatorRound2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The underlying signing packages being sent to the followers.
	SigningPackages []*v1alpha11.SigningPackage `protobuf:"bytes,1,rep,name=signing_packages,json=signingPackages,proto3" json:"signing_packages,omitempty"`
}

func (x *CoordinatorRound2) Reset() {
	*x = CoordinatorRound2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_penumbra_custody_threshold_v1alpha1_threshold_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoordinatorRound2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoordinatorRound2) ProtoMessage() {}

func (x *CoordinatorRound2) ProtoReflect() protoreflect.Message {
	mi := &file_penumbra_custody_threshold_v1alpha1_threshold_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoordinatorRound2.ProtoReflect.Descriptor instead.
func (*CoordinatorRound2) Descriptor() ([]byte, []int) {
	return file_penumbra_custody_threshold_v1alpha1_threshold_proto_rawDescGZIP(), []int{3}
}

func (x *CoordinatorRound2) GetSigningPackages() []*v1alpha11.SigningPackage {
	if x != nil {
		return x.SigningPackages
	}
	return nil
}

// The first message the followers send back to the coordinator when signing.
type FollowerRound1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inner *FollowerRound1_Inner `protobuf:"bytes,1,opt,name=inner,proto3" json:"inner,omitempty"`
	// The verification key identifying the sender.
	Pk *VerificationKey `protobuf:"bytes,2,opt,name=pk,proto3" json:"pk,omitempty"`
	// A signature over the proto-encoded bytes of inner.
	Sig *Signature `protobuf:"bytes,3,opt,name=sig,proto3" json:"sig,omitempty"`
}

func (x *FollowerRound1) Reset() {
	*x = FollowerRound1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_penumbra_custody_threshold_v1alpha1_threshold_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FollowerRound1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowerRound1) ProtoMessage() {}

func (x *FollowerRound1) ProtoReflect() protoreflect.Message {
	mi := &file_penumbra_custody_threshold_v1alpha1_threshold_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowerRound1.ProtoReflect.Descriptor instead.
func (*FollowerRound1) Descriptor() ([]byte, []int) {
	return file_penumbra_custody_threshold_v1alpha1_threshold_proto_rawDescGZIP(), []int{4}
}

func (x *FollowerRound1) GetInner() *FollowerRound1_Inner {
	if x != nil {
		return x.Inner
	}
	return nil
}

func (x *FollowerRound1) GetPk() *VerificationKey {
	if x != nil {
		return x.Pk
	}
	return nil
}

func (x *FollowerRound1) GetSig() *Signature {
	if x != nil {
		return x.Sig
	}
	return nil
}

// The second message the followers send back to the coordinator when signing.
type FollowerRound2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// One share for each signature requested by the plan, in order.
	//
	// These can be unsigned, since any shenanigans will be detected when the signature
	// fails to verify.
	Shares []*v1alpha11.SignatureShare `protobuf:"bytes,1,rep,name=shares,proto3" json:"shares,omitempty"`
}

func (x *FollowerRound2) Reset() {
	*x = FollowerRound2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_penumbra_custody_threshold_v1alpha1_threshold_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FollowerRound2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowerRound2) ProtoMessage() {}

func (x *FollowerRound2) ProtoReflect() protoreflect.Message {
	mi := &file_penumbra_custody_threshold_v1alpha1_threshold_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowerRound2.ProtoReflect.Descriptor instead.
func (*FollowerRound2) Descriptor() ([]byte, []int) {
	return file_penumbra_custody_threshold_v1alpha1_threshold_proto_rawDescGZIP(), []int{5}
}

func (x *FollowerRound2) GetShares() []*v1alpha11.SignatureShare {
	if x != nil {
		return x.Shares
	}
	return nil
}

// The inner message that will be signed by the follower.
type FollowerRound1_Inner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// One signing commitment pair for each signature requested by the plan, in order.
	Commitments []*v1alpha11.SigningCommitments `protobuf:"bytes,1,rep,name=commitments,proto3" json:"commitments,omitempty"`
}

func (x *FollowerRound1_Inner) Reset() {
	*x = FollowerRound1_Inner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_penumbra_custody_threshold_v1alpha1_threshold_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FollowerRound1_Inner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowerRound1_Inner) ProtoMessage() {}

func (x *FollowerRound1_Inner) ProtoReflect() protoreflect.Message {
	mi := &file_penumbra_custody_threshold_v1alpha1_threshold_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowerRound1_Inner.ProtoReflect.Descriptor instead.
func (*FollowerRound1_Inner) Descriptor() ([]byte, []int) {
	return file_penumbra_custody_threshold_v1alpha1_threshold_proto_rawDescGZIP(), []int{4, 0}
}

func (x *FollowerRound1_Inner) GetCommitments() []*v1alpha11.SigningCommitments {
	if x != nil {
		return x.Commitments
	}
	return nil
}

var File_penumbra_custody_threshold_v1alpha1_threshold_proto protoreflect.FileDescriptor

var file_penumbra_custody_threshold_v1alpha1_threshold_proto_rawDesc = []byte{
	0x0a, 0x33, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x2f, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x64, 0x79, 0x2f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x2f, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x23, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x2e, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c,
	0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x34, 0x70, 0x65, 0x6e, 0x75,
	0x6d, 0x62, 0x72, 0x61, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x3c, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x6f, 0x2f, 0x64, 0x65, 0x63, 0x61, 0x66, 0x33, 0x37, 0x37, 0x5f, 0x66, 0x72, 0x6f, 0x73, 0x74,
	0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x64, 0x65, 0x63, 0x61, 0x66, 0x33,
	0x37, 0x37, 0x5f, 0x66, 0x72, 0x6f, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x27,
	0x0a, 0x0f, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x22, 0x21, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x22, 0x5c, 0x0a, 0x11, 0x43, 0x6f,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x31, 0x12,
	0x47, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e,
	0x70, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c,
	0x61, 0x6e, 0x52, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x22, 0x77, 0x0a, 0x11, 0x43, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x32, 0x12, 0x62, 0x0a,
	0x10, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x62,
	0x72, 0x61, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x63, 0x61, 0x66, 0x33,
	0x37, 0x37, 0x5f, 0x66, 0x72, 0x6f, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x52, 0x0f, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x73, 0x22, 0xd1, 0x02, 0x0a, 0x0e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x6f,
	0x75, 0x6e, 0x64, 0x31, 0x12, 0x4f, 0x0a, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x2e, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x65, 0x72, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x31, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x05,
	0x69, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x44, 0x0a, 0x02, 0x70, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x34, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x64, 0x79, 0x2e, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x02, 0x70, 0x6b, 0x12, 0x40, 0x0a, 0x03, 0x73,
	0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d,
	0x62, 0x72, 0x61, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x2e, 0x74, 0x68, 0x72, 0x65,
	0x73, 0x68, 0x6f, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x03, 0x73, 0x69, 0x67, 0x1a, 0x66, 0x0a,
	0x05, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x5d, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x70, 0x65,
	0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x64, 0x65,
	0x63, 0x61, 0x66, 0x33, 0x37, 0x37, 0x5f, 0x66, 0x72, 0x6f, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x61, 0x0a, 0x0e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x72, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x32, 0x12, 0x4f, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x62,
	0x72, 0x61, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x64, 0x65, 0x63, 0x61, 0x66, 0x33,
	0x37, 0x37, 0x5f, 0x66, 0x72, 0x6f, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x52, 0x06, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x42, 0xce, 0x02, 0x0a, 0x27, 0x63, 0x6f, 0x6d,
	0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x64,
	0x79, 0x2e, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x42, 0x0e, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x64, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x2d, 0x7a, 0x6f, 0x6e, 0x65,
	0x2f, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x67, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x2f,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x2f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c,
	0x64, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x3b, 0x74, 0x68, 0x72, 0x65, 0x73,
	0x68, 0x6f, 0x6c, 0x64, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xa2, 0x02, 0x03, 0x50,
	0x43, 0x54, 0xaa, 0x02, 0x23, 0x50, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x2e, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x64, 0x79, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x2e,
	0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xca, 0x02, 0x23, 0x50, 0x65, 0x6e, 0x75, 0x6d,
	0x62, 0x72, 0x61, 0x5c, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x64, 0x79, 0x5c, 0x54, 0x68, 0x72, 0x65,
	0x73, 0x68, 0x6f, 0x6c, 0x64, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xe2, 0x02,
	0x2f, 0x50, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x5c, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x64,
	0x79, 0x5c, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x5c, 0x56, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x26, 0x50, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x3a, 0x3a, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x64, 0x79, 0x3a, 0x3a, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x3a,
	0x3a, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_penumbra_custody_threshold_v1alpha1_threshold_proto_rawDescOnce sync.Once
	file_penumbra_custody_threshold_v1alpha1_threshold_proto_rawDescData = file_penumbra_custody_threshold_v1alpha1_threshold_proto_rawDesc
)

func file_penumbra_custody_threshold_v1alpha1_threshold_proto_rawDescGZIP() []byte {
	file_penumbra_custody_threshold_v1alpha1_threshold_proto_rawDescOnce.Do(func() {
		file_penumbra_custody_threshold_v1alpha1_threshold_proto_rawDescData = protoimpl.X.CompressGZIP(file_penumbra_custody_threshold_v1alpha1_threshold_proto_rawDescData)
	})
	return file_penumbra_custody_threshold_v1alpha1_threshold_proto_rawDescData
}

var file_penumbra_custody_threshold_v1alpha1_threshold_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_penumbra_custody_threshold_v1alpha1_threshold_proto_goTypes = []interface{}{
	(*VerificationKey)(nil),              // 0: penumbra.custody.threshold.v1alpha1.VerificationKey
	(*Signature)(nil),                    // 1: penumbra.custody.threshold.v1alpha1.Signature
	(*CoordinatorRound1)(nil),            // 2: penumbra.custody.threshold.v1alpha1.CoordinatorRound1
	(*CoordinatorRound2)(nil),            // 3: penumbra.custody.threshold.v1alpha1.CoordinatorRound2
	(*FollowerRound1)(nil),               // 4: penumbra.custody.threshold.v1alpha1.FollowerRound1
	(*FollowerRound2)(nil),               // 5: penumbra.custody.threshold.v1alpha1.FollowerRound2
	(*FollowerRound1_Inner)(nil),         // 6: penumbra.custody.threshold.v1alpha1.FollowerRound1.Inner
	(*v1alpha1.TransactionPlan)(nil),     // 7: penumbra.core.transaction.v1alpha1.TransactionPlan
	(*v1alpha11.SigningPackage)(nil),     // 8: penumbra.crypto.decaf377_frost.v1alpha1.SigningPackage
	(*v1alpha11.SignatureShare)(nil),     // 9: penumbra.crypto.decaf377_frost.v1alpha1.SignatureShare
	(*v1alpha11.SigningCommitments)(nil), // 10: penumbra.crypto.decaf377_frost.v1alpha1.SigningCommitments
}
var file_penumbra_custody_threshold_v1alpha1_threshold_proto_depIdxs = []int32{
	7,  // 0: penumbra.custody.threshold.v1alpha1.CoordinatorRound1.plan:type_name -> penumbra.core.transaction.v1alpha1.TransactionPlan
	8,  // 1: penumbra.custody.threshold.v1alpha1.CoordinatorRound2.signing_packages:type_name -> penumbra.crypto.decaf377_frost.v1alpha1.SigningPackage
	6,  // 2: penumbra.custody.threshold.v1alpha1.FollowerRound1.inner:type_name -> penumbra.custody.threshold.v1alpha1.FollowerRound1.Inner
	0,  // 3: penumbra.custody.threshold.v1alpha1.FollowerRound1.pk:type_name -> penumbra.custody.threshold.v1alpha1.VerificationKey
	1,  // 4: penumbra.custody.threshold.v1alpha1.FollowerRound1.sig:type_name -> penumbra.custody.threshold.v1alpha1.Signature
	9,  // 5: penumbra.custody.threshold.v1alpha1.FollowerRound2.shares:type_name -> penumbra.crypto.decaf377_frost.v1alpha1.SignatureShare
	10, // 6: penumbra.custody.threshold.v1alpha1.FollowerRound1.Inner.commitments:type_name -> penumbra.crypto.decaf377_frost.v1alpha1.SigningCommitments
	7,  // [7:7] is the sub-list for method output_type
	7,  // [7:7] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_penumbra_custody_threshold_v1alpha1_threshold_proto_init() }
func file_penumbra_custody_threshold_v1alpha1_threshold_proto_init() {
	if File_penumbra_custody_threshold_v1alpha1_threshold_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_penumbra_custody_threshold_v1alpha1_threshold_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerificationKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_penumbra_custody_threshold_v1alpha1_threshold_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Signature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_penumbra_custody_threshold_v1alpha1_threshold_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoordinatorRound1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_penumbra_custody_threshold_v1alpha1_threshold_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoordinatorRound2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_penumbra_custody_threshold_v1alpha1_threshold_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FollowerRound1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_penumbra_custody_threshold_v1alpha1_threshold_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FollowerRound2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_penumbra_custody_threshold_v1alpha1_threshold_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FollowerRound1_Inner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_penumbra_custody_threshold_v1alpha1_threshold_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_penumbra_custody_threshold_v1alpha1_threshold_proto_goTypes,
		DependencyIndexes: file_penumbra_custody_threshold_v1alpha1_threshold_proto_depIdxs,
		MessageInfos:      file_penumbra_custody_threshold_v1alpha1_threshold_proto_msgTypes,
	}.Build()
	File_penumbra_custody_threshold_v1alpha1_threshold_proto = out.File
	file_penumbra_custody_threshold_v1alpha1_threshold_proto_rawDesc = nil
	file_penumbra_custody_threshold_v1alpha1_threshold_proto_goTypes = nil
	file_penumbra_custody_threshold_v1alpha1_threshold_proto_depIdxs = nil
}
